[tool.poetry]
name = "fluentiter"
version = "1.1.0"
description = "Nice and clean iterator patterns for python"
authors = ["Damion Werner <damion.werner@gmail.com>"]
readme = "README.md"
packages = [{ include = "fluentiter" }]
repository = "https://github.com/damiondoesthings/fluentiter"
documentation = "https://damiondoesthings.github.io/fluentiter/"

[tool.poetry.dependencies]
python = "^3.8"
more-itertools = "^10.1.0"

[tool.poetry.extras]
more = ["more-itertools"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^23.7.0"
mypy = "^1.4.1"
ruff = "^0.0.282"
hypothesis = "^6.82.0"
poethepoet = "^0.23.0"
ipykernel = "^6.25.2"
coverage = "^7.3.1"
isort = "^5.12.0"


[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.2"
mkdocstrings = { extras = ["python"], version = "^0.22.0" }
mkdocs-material = "^9.2.4"
mkdocs-macros-plugin = "^1.0.4"


[tool.poetry.group.examples.dependencies]
types-requests = "^2.31.0.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100

[tool.mypy]
exclude = ["tests"]

[tool.isort]
profile = "black"

[tool.poe.tasks]
_test = "coverage run -m pytest"
_report = "coverage report"
test = ["_test", "_report"]
isort = "isort ."
black = "black ."
mypy = "mypy ."
ruff = "ruff ."
format = ["isort", "black"]
lint = ["mypy", "ruff"]
all = ["format", "lint", "test"]

_docs_build = "mkdocs build"
_docs_publish = "mkdocs gh-deploy"
_docs_serve = "mkdocs serve"

docs_serve = ["_docs_build", "_docs_serve"]
docs_publish = ["_docs_build", "_docs_publish"]

[tool.coverage.run]
omit = ["tests/*"]
[tool.coverage.report]
fail_under = 100
